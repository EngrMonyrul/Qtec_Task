import 'dart:convert';
import 'package:flutter/cupertino.dart';
import 'package:untitled/models/link_data.dart';
import 'package:untitled/models/result_model.dart';
import 'package:untitled/models/video_data.dart';
import 'package:http/http.dart' as http;

class DataFetch {
  late Autogenerated autogenerated;
  String url = 'https://test-ximit.mahfil.net/api/trending-video/1';

  Future<Autogenerated> fetchingDataFromApi() async {
    List<Results> resultsValue = [];
    try {
      final response = await http.get(Uri.parse(url));
      if (response.statusCode == 200) {
        final responseBody = response.body;
        final jsonBody = json.decode(responseBody);
        final Map<String, dynamic> data = jsonBody;
        Links linksData = Links(
          next: data['links']['next'],
          previous: data['links']['previous'],
        );
        for (int i = 0; i < data['results'].length; i++) {
          Results results = Results(
            viewers: data['results'][i]['viewers'],
            channelId: data['results'][i]['channel_id'],
            type: data['results'][i]['object_type'],
            duration: data['results'][i]['duration'],
            objectType: data['results'][i]['objectType'],
            channelSubscriber: data['results'][i]['channel_subscriber'],
            channelSlug: data['results'][i]['channel_slug'],
            isVerified: data['results'][i]['is_verified'],
            channelUsername: data['results'][i]['channel_username'],
            channelName: data['results'][i]['channel_name'],
            channelImage: data['results'][i]['channel_image'],
            liveManifest: data['results'][i]['live_manifest'],
            liveStatus: data['results'][i]['live_status'],
            manifest: data['results'][i]['manifest'],
            createdAt: data['results'][i]['createdAt'],
            slug: data['results'][i]['slug'],
            dateAndTime: data['results'][i]['date_and_time'],
            title: data['results'][i]['title'],
            id: data['results'][i]['id'],
            thumbnail: data['results'][i]['thumbnail'],
            isLive: data['results'][i]['is_live'],
          );
          resultsValue.add(results);
        }
        autogenerated = Autogenerated(
          links: linksData,
          total: data['total'],
          page: data['page'],
          pageSize: data['pageSize'],
          results: resultsValue,
        );
      }
    } catch (e) {
      debugPrint('Error---------------------> \n${e.toString()}');
    }

    return autogenerated;
  }
}
