import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:intl/intl.dart';
import 'package:provider/provider.dart';
import 'package:untitled/controls/functions/data_fetching.dart';
import 'package:untitled/controls/providers/home_page_provider.dart';
import 'package:untitled/models/video_data.dart';
import 'package:untitled/views/homePage/subViews/video_player_page.dart';

import '../../controls/widgets/error_area.dart';
import '../../controls/widgets/label_area.dart';
import '../../controls/widgets/loading_area.dart';
import '../../controls/widgets/video_details_widget.dart';
import '../../controls/widgets/video_item_widget.dart';

class HomePageView extends StatefulWidget {
  const HomePageView({super.key});

  @override
  State<HomePageView> createState() => _HomePageViewState();
}

class _HomePageViewState extends State<HomePageView> {
  @override
  Widget build(BuildContext context) {
    return SafeArea(
      child: Consumer<HomePageProvider>(builder: (context, value, child) {
        return Scaffold(
          backgroundColor: Colors.white.withOpacity(0.9),
          body: SingleChildScrollView(
            child: Padding(
              padding: const EdgeInsets.symmetric(horizontal: 10.0),
              child: Center(
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    labelArea(),
                    const SizedBox(height: 20),
                    FutureBuilder<Autogenerated>(
                      future: DataFetch().fetchingDataFromApi(),
                      builder:
                          (context, AsyncSnapshot<Autogenerated> snapshot) {
                        if (snapshot.connectionState ==
                            ConnectionState.waiting) {
                          return loadingArea();
                        } else if (snapshot.hasError) {
                          return errorArea();
                        } else {
                          return ListView.builder(
                            shrinkWrap: true,
                            itemCount: snapshot.data!.results!.length,
                            physics: const NeverScrollableScrollPhysics(),
                            itemBuilder: (context, index) {
                              final dataAndTimeStr =
                                  snapshot.data!.results![index].dateAndTime!;
                              DateTime parseDateTime =
                                  DateTime.parse(dataAndTimeStr);
                              String formatDate = DateFormat('MMM dd, yyyy')
                                  .format(parseDateTime);
                              return InkWell(
                                onTap: () {
                                  Navigator.push(
                                      context,
                                      MaterialPageRoute(
                                          builder: (context) => VideoPlayerPage(
                                              results: snapshot
                                                  .data!.results![index])));
                                },
                                child: Container(
                                  height:
                                      MediaQuery.of(context).size.height * .35,
                                  width: MediaQuery.of(context).size.width,
                                  margin: const EdgeInsets.only(bottom: 10),
                                  decoration: const BoxDecoration(
                                    color: Colors.white,
                                    borderRadius:
                                        BorderRadius.all(Radius.circular(10)),
                                  ),
                                  child: Column(
                                    children: [
                                      videoItemArea(context, snapshot, index),
                                      videoDetailsArea(
                                          context, snapshot, index, formatDate)
                                    ],
                                  ),
                                ),
                              );
                            },
                          );
                        }
                      },
                    ),
                  ],
                ),
              ),
            ),
          ),
        );
      }),
    );
  }
}
